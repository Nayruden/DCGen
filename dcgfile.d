module dcgen.dcgfile;

import defines;
import dcgclass;
import dcgmethod;
import tango.text.convert.Format;

class DCGFile
{
	protected DCGClass clazz;
	protected DCGMethod[] global_functions;
	protected char[] module_name;
	protected char[] include_file_name;
	protected Config config;
	protected bool globals_file;
	
	this( in Node class_node, in char[] module_name, in Config config )
	{
		this.config = config;
		this.module_name = module_name;
		clazz = new DCGClass( class_node, config );
		globals_file = false;
		
		char[] class_header_file_id = getNodeAttribute( class_node, "file" );
		auto class_header_file_node = class_node.document.query.child.child.filter( filterByID( class_header_file_id ) ).nodes[ 0 ];
		include_file_name = getNodeAttribute( class_header_file_node, "name" );
	}
	
	this( in Node[] global_functions, in char[] module_name, in Config config )
	{
		foreach ( global_function; global_functions ) {
			this.global_functions ~= new DCGMethod( null, global_function, config ); // TODO: Better naming
		}
		this.module_name = module_name;
		this.config = config;
		globals_file = true;
	}
	
//////////////////////////////layout/////////////////////////////

	// 0 = Module name
	// 1 = Include file
	// 2 = File content

	private const d_file_layout =
`// This file was generated by DCGen, do not edit by hand!

module dcgen.{0}; // TODO: make prefix a config

import tango.stdc.stringz; // TODO: Don't import this if we don't need it

{2}
`;

	private const c_file_layout =
`// This file was generated by DCGen, do not edit by hand!

#include <assert.h>
#include "{1}"

{2}
`;
	
	char[] layout( Language language )
	{
		assert( language == Language.D || language == Language.CPP, "I don't know how to layout any other langauge" );
		
		scope char[] file_content;
		if ( language == Language.D )
			file_content = clazz.dClassDfn;
		else
			file_content = clazz.cClassDfn;
		
		scope char[] format = d_file_layout;
		if ( language == Language.CPP )
			format = c_file_layout;
		
		return Format( format,
				module_name,
				include_file_name,
				file_content );		
	}
}
